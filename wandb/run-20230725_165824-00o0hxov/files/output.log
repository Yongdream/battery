07-25 16:58:30 method: DA
07-25 16:58:30 model_name: Res_AltsmFeatures
07-25 16:58:30 data_name: Battery
07-25 16:58:30 data_dir: ../processed
07-25 16:58:30 transfer_task: [[1], [2]]
07-25 16:58:30 normlizetype: mean-std
07-25 16:58:30 adabn: False
07-25 16:58:30 eval_all: False
07-25 16:58:30 adabn_epochs: 3
07-25 16:58:30 cuda_device: 0
07-25 16:58:30 checkpoint_dir: ./checkpoint
07-25 16:58:30 pretrained: False
07-25 16:58:30 batch_size: 128
07-25 16:58:30 num_workers: 0
07-25 16:58:30 patience: 50
07-25 16:58:30 bottleneck: True
07-25 16:58:30 bottleneck_num: 128
07-25 16:58:30 last_batch: False
07-25 16:58:30 distance_metric: False
07-25 16:58:30 distance_loss: JMMD
07-25 16:58:30 trade_off_distance: Step
07-25 16:58:30 lam_distance: 1.2
07-25 16:58:30 domain_adversarial: True
07-25 16:58:30 adversarial_loss: CDA
07-25 16:58:30 hidden_size: 1024
07-25 16:58:30 trade_off_adversarial: Step
07-25 16:58:30 lam_adversarial: 2
07-25 16:58:30 opt: adam
07-25 16:58:30 lr: 0.001
07-25 16:58:30 momentum: 0.9
07-25 16:58:30 weight_decay: 1e-05
07-25 16:58:30 lr_scheduler: step
07-25 16:58:30 gamma: 0.8
07-25 16:58:30 steps: 80, 95, 105
07-25 16:58:30 criterion: CeLoss
07-25 16:58:30 middle_epoch: 70
07-25 16:58:30 max_epoch: 128
07-25 16:58:30 print_step: 600
07-25 16:58:30 using 1 gpus


100%|██████████| 5/5 [00:06<00:00,  1.28s/it]




100%|██████████| 5/5 [00:08<00:00,  1.79s/it]
07-25 16:58:51 ==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
Sequential                               [128, 5]                  --
├─Res_AltsmFeatures: 1-1                 [128, 128]                --
│    └─Res_Altsm: 2-1                    [128, 128]                689,024
│    │    └─Conv1d: 3-1                  [128, 32, 128]            3,104
│    │    └─ReLU: 3-2                    [128, 32, 128]            --
│    │    └─AvgPool1d: 3-3               [128, 32, 64]             --
│    │    └─ResidualBlock: 3-4           [128, 64, 32]             20,672
│    │    └─GRU: 3-5                     [128, 32, 64]             94,080
│    │    └─Sequential: 3-6              [128, 32, 1]              8,448
├─Sequential: 1-2                        [128, 128]                --
│    └─Linear: 2-2                       [128, 128]                16,512
│    └─ReLU: 2-3                         [128, 128]                --
│    └─Dropout: 2-4                      [128, 128]                --
├─Linear: 1-3                            [128, 5]                  645
==========================================================================================
Total params: 832,485
Trainable params: 832,485
Non-trainable params: 0
Total mult-adds (M): 524.16
==========================================================================================
Input size (MB): 2.10
Forward/backward pass size (MB): 16.95
Params size (MB): 0.57
Estimated Total Size (MB): 19.62
==========================================================================================
07-25 16:58:51 -----Epoch 0/127-----
07-25 16:58:51 current lr: [0.001, 0.001, 0.001, 0.001]
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
Sequential                               [128, 5]                  --
├─Res_AltsmFeatures: 1-1                 [128, 128]                --
│    └─Res_Altsm: 2-1                    [128, 128]                689,024
│    │    └─Conv1d: 3-1                  [128, 32, 128]            3,104
│    │    └─ReLU: 3-2                    [128, 32, 128]            --
│    │    └─AvgPool1d: 3-3               [128, 32, 64]             --
│    │    └─ResidualBlock: 3-4           [128, 64, 32]             20,672
│    │    └─GRU: 3-5                     [128, 32, 64]             94,080
│    │    └─Sequential: 3-6              [128, 32, 1]              8,448
├─Sequential: 1-2                        [128, 128]                --
│    └─Linear: 2-2                       [128, 128]                16,512
│    └─ReLU: 2-3                         [128, 128]                --
│    └─Dropout: 2-4                      [128, 128]                --
├─Linear: 1-3                            [128, 5]                  645
==========================================================================================
Total params: 832,485
Trainable params: 832,485
Non-trainable params: 0
Total mult-adds (M): 524.16
==========================================================================================
Input size (MB): 2.10
Forward/backward pass size (MB): 16.95
Params size (MB): 0.57
Estimated Total Size (MB): 19.62
==========================================================================================
Model build successfully!
07-25 16:58:52 Epoch: 0 [0/14701], Train Loss: 1.6118 Train Acc: 0.2344,136.0 examples/sec 0.94 sec/batch
07-25 16:58:57 Epoch: 0 source_train-Loss: 1.2132 source_train-Acc: 0.4045, Cost 5.4 sec
Traceback (most recent call last):
  File "E:\Galaxy\yang7hi_battery\train_base.py", line 122, in <module>
    trainer.train(cond=condition)
  File "E:\Galaxy\yang7hi_battery\utlis\train_utils_base.py", line 551, in train
    epoch, phase, epoch_loss, phase, epoch_acc, time.time() - epoch_start
  File "D:\anaconda\envs\pytorch\lib\site-packages\wandb\sdk\wandb_run.py", line 390, in wrapper
    return func(self, *args, **kwargs)
  File "D:\anaconda\envs\pytorch\lib\site-packages\wandb\sdk\wandb_run.py", line 341, in wrapper_fn
    return func(self, *args, **kwargs)
  File "D:\anaconda\envs\pytorch\lib\site-packages\wandb\sdk\wandb_run.py", line 331, in wrapper
    return func(self, *args, **kwargs)
  File "D:\anaconda\envs\pytorch\lib\site-packages\wandb\sdk\wandb_run.py", line 1746, in log
    self._log(data=data, step=step, commit=commit)
  File "D:\anaconda\envs\pytorch\lib\site-packages\wandb\sdk\wandb_run.py", line 1522, in _log
    raise ValueError("wandb.log must be passed a dictionary")
ValueError: wandb.log must be passed a dictionary